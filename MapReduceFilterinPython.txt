# "A map function executes certain instructions or functionality provided to it on every item of an iterable."
# The iterable could be a list, tuple, set, etc.
#map(function,iterable)
#A map function takes two parameters:
# First one is the function through which we want to pass the items/values of the iterable
# The second one is the iterable itself
items = [1, 2, 3, 4, 5]
a=list(map((lambda x: x **3), items))
print(a)


numbers = ["2","34","64"]
numbers=list(map(int,numbers))
print(numbers)

def square(a):
    return a*a
def cube(a):
    return a*a*a

func=[square,cube]
num=[2,3,5,6,15,10,4,8]
for i in num:
    val=list(map(lambda x: x(i),func ))
    print(val) 
#A filter function in Python tests a specific user-defined condition for a function and returns an iterable for the elements and values 
# that satisfy the condition or, in other words, return true."
#filter(function, iterable)
a = [1,2,3,4,5,6]
b = [2,5,0,7,3]
c= list(filter(lambda x: x in a, b))
print(c) 

#Reduce functions apply a function to every item of an iterable and gives back a single value as a resultant.
#reduce(function, iterable)
from functools import reduce
list1=[1,2,3,4]
num=reduce(lambda x,y:x+y,list1)
print("num  ",num)
