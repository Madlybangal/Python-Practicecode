# Given an array of strings words representing an English Dictionary, return the
# longest word in words that can be built one character at a time by other words in words.
# If there is more than one possible answer, return the longest word with the 
# smallest lexicographical order. If there is no answer, return the empty string.
# Note that the word should be built from left to right with each additional 
# character being added to the end of a previous word.
# Constraints:
# 1 <= words.length <= 1000
# 1 <= words[i].length <= 30
# words[i] consists of lowercase English letters. 
class Solution:
    
    def findLongestWord(self, words: list[str]) -> str:
        cnt, ans = 0, ''
        s = set(words)
        for w in s:
            n = len(w)
            if all(w[:i] in s for i in range(1, n)):
                if cnt < n:
                    cnt, ans = n, w
                #lexicographical order 
                elif cnt == n and w < ans:
                    ans = w
              
        return ans

obj=Solution()
print(obj.findLongestWord(["a","banana","app","appl","ap","apply","apple"]))

 