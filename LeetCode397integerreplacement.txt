def integer_replacement(n: int) -> int:
    """
    Given a positive integer n, this function returns the minimum number of steps to reduce it to 1.
    In each step, if n is even, you can divide it by 2; if n is odd, you can either add or subtract 1.
    """
    steps = 0
    while n > 1:
        if n % 2 == 0:
            n //= 2
        else:
            # If n is odd, choose the operation that leads to fewer steps
            if n == 3 or (n & 2) == 0:  # If n is 3 or the second least significant bit is not set
                n -= 1
            else:
                if n == 3:
                    n -= 1
                elif (n + 1) % 4 == 0:
                    n += 1
                else:
                    n -= 1
        print("n: \n",n)        
        steps += 1
    return steps


print(integer_replacement(9))  # Output: 3